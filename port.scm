(define (lowest-highest-age age-bst age)
(cond ((is-empty? age-bst) make-empty-bst)
((= (get-entry age-bst) age) (list (rightmost (get-left-bst (search age-bst age))) (leftmost (get-right-bst (search age-bst age)))))
((> (get-entry age-bst) age)
(cond ((is-empty? (get-left-bst (lowest-highest-age (get-left-bst age-bst) age))) (list (get-entry (lowest-highest-age (get-left-bst age-bst) age)) (get-entry age-bst)))
(else (lowest-highest-age (get-left-bst age-bst) age)))
)
(else (cond ((is-empty? (get-entry (lowest-highest-age (get-right-bst age-bst) age))) (list (get-entry age-bst) (get-left-bst (lowest-highest-age (get-right-bst age-bst) age))))
(else (lowest-highest-age (get-right-bst age-bst) age)))
)
)
)
